services:
  db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    networks:
      - app-network


  backend:
    build: 
      context: ./server
    container_name: extradetailer_backend
    env_file:
      - ./server/.env
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build: 
      context: ./client
    container_name: extradetailer_frontend
    env_file:
      - ./client/.env
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: extradetailer_nginx_server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl:ro  # Read-only mount for SSL certs
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped


volumes:
  pgdata:

networks:
  app-network:
    driver: bridge